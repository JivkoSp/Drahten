@model UserSearchOptionsViewModel

<a href="#topic-menu" class="text-decoration-none mt-5 mb-3 text-info border-bottom border-info" style="font-size:16px;"
   data-bs-toggle="collapse" role="button" aria-expanded="false" aria-controls="topic-menu">
    Configure your search options
</a>

<nav id="topic-menu" class="collapse navbar navbar-expand-lg navbar-light border-bottom border-info">
    <ul class="nav nav-pills flex-column mb-sm-auto mb-0 align-items-center align-items-sm-start">
        @{
            void InitializeTopicsMenu()
            {
                //Initialization of list with hex color values.
                //The purpose of this list is to provide colors for every level, that is deeper than 0 (the ground level).
                var menu_colors = new List<string>
                {
                    "#0d6efd",
                    "#81b3fe",
                    "#cde1fe"
                };

                foreach (var topic in Model.Topics)
                {
                    @if (topic.ParentTopicId == null)
                    {
                        void InitializeSubTopics(TopicDto topicDto, int menuLevel, string topicFullName)
                        {
                            topicFullName += topicDto.TopicName;

                            <li class="nav-item">

                                @{
                                    var subscribedTopic = Model.UserTopics.FirstOrDefault(x => x.TopicId == topicDto.TopicId);

                                    if (subscribedTopic == null)
                                    {
                                        //Check if the topicDto has any children. If true assign 1, if false assign 0.
                                        var haveChildren = topicDto.Children?.Count > 0 ? 1 : 0;

                                        <a id="@topicFullName" href="#menu-@topicDto.TopicId" class="text-decoration-none home-menu-content nav-link"
                                           style="color: @menu_colors[menuLevel]"
                                           data-bs-toggle="collapse" role="button" aria-expanded="false"
                                           aria-controls="menu-@topicDto.TopicId" onclick="subscribeToTopic(@topicDto.TopicId, @haveChildren)">
                                            @topicDto.TopicName
                                        </a>
                                    }
                                    else
                                    {
                                        <a id="@topicFullName" href="#menu-@topicDto.TopicId" class="text-decoration-none home-menu-content nav-link"
                                           style="color:lightgreen;"
                                           data-bs-toggle="collapse" role="button" aria-expanded="false" aria-controls="menu-@topicDto.TopicId">
                                            @topicDto.TopicName
                                        </a>
                                    }
                                }

                                @if (topicDto?.Children == null || topicDto?.Children.Count == 0)
                                {
                                    return;
                                }
                                else
                                {
                                    <div id="menu-@topicDto?.TopicId" class="collapse">
                                        <ul class="nav nav-pills flex-column mb-sm-auto mb-0 align-items-center align-items-sm-start">
                                            @foreach (var childtopic in topicDto.Children)
                                            {
                                                InitializeSubTopics(childtopic, menuLevel + 1, topicFullName);
                                            }
                                        </ul>
                                    </div>
                                }
                            </li>
                        }

                        InitializeSubTopics(topic, 0, "");
                    }
                }
            }

            InitializeTopicsMenu();
        }
    </ul>
</nav>