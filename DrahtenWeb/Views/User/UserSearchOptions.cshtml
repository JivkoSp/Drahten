@using DrahtenWeb.Extensions
@model UserSearchOptionsViewModel

<div class="row">
    <h1 class="text-center mb-4">Available Topics</h1>
    <div class="masonry">

        @{
            foreach(var topic in Model.Topics)
            {
                if(topic.Children.Count == 0)
                {
                    <div class="card masonry-item">
                        <img src="https://via.placeholder.com/400x600" class="card-img-top" alt="...">
                        <div class="topic-card-body d-flex flex-column">
                            <h5 class="topic-card-title text-center pt-2 pb-2">@topic.TopicFullName.FromSnakeToPascalCase().PascalCaseWithSpaces()</h5>
                            <p class="topic-card-text ps-2">Number of Documents: </p>
                            <p class="topic-card-text ps-2">Number of Subscriptions: </p>
                            <p class="topic-card-text ps-2">Newest Document Date: </p>
                            <p class="topic-card-text ps-2">Oldest Document Date: </p>
                            <p class="topic-card-text ps-2">Sources: </p>
                            <button class="btn btn-topic-subscribe mt-auto" onclick="subscribeToTopic('@topic.TopicId')">Subscribe</button>
                        </div>
                    </div>
                }
            }
        }
    </div>
</div>


@section Scripts{
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script>
       
        function subscribeToTopic(topicId) {

            console.log("subscribed");

            //TODO: Uncomment the ajax call when finished with the development of this page.
            //It is commented for now just for testing purposes.

            // //Send async POST http request to /User/UserTopicSubscription
            // $.ajax({
            //     type: 'POST',
            //     url: '/User/UserTopicSubscription',
            //     data: {
            //         'topicId': topicId
            //     },
            //     //TODO: Log the messages for success, failure or error to logging service.
            //     success: (response) => {

            //         console.log("success", response);
            //     },
            //     failure: (reponse) => {

            //         console.log("failure", response);
            //     },
            //     error: (response) => {

            //         console.log("error", response);
            //     }
            // });
        }

    </script>
}